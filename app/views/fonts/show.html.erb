<main class="container mx-auto mt-28 px-5">
  <div class="max-w-4xl mx-auto">
    <!-- フォント情報 -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold mb-4"><%= @font.name %></h1>
      <div class="flex gap-4 mb-4">
        <span class="bg-blue-100 px-3 py-1 rounded">スタイル: <%= @font.style %></span>
        <span class="bg-green-100 px-3 py-1 rounded">ジャンル: <%= @font.genre %></span>
      </div>
    </div>

    <!-- プレビューエリア -->
    <div class="mb-8">
      <h2 class="text-xl font-semibold mb-4">プレビュー</h2>
      <div class="mb-4">
        <input id="preview-input" type="text" value="<%= @preview_text %>"
               placeholder="プレビューしたい文章を入力してください"
               class="border rounded p-2 w-full" />
      </div>
      <div class="mb-4">
        <label for="font-size" class="mr-2">文字サイズ</label>
        <input type="range" id="font-size" min="10" max="72" value="24" />
        <span id="font-size-display">24px</span>
      </div>

      <link href="<%= @font.font_url %>" rel="stylesheet">
      <div class="border rounded p-6 bg-gray-50">
        <p id="font-preview" style="font-family: '<%= @font.name %>', sans-serif; font-size: 24px;">
          <%= @preview_text %>
        </p>
      </div>
    </div>

    <!-- 戻るボタン -->
    <div class="text-center">
      <%= link_to "フォント一覧に戻る", root_path,
                  class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" %>
    </div>
  </div>
</main>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const previewInput = document.getElementById('preview-input');
  const fontPreview = document.getElementById('font-preview');
  const fontSizeSlider = document.getElementById('font-size');
  const fontSizeDisplay = document.getElementById('font-size-display');

  // デバッグ用ログ
  console.log('プレビュー要素:', fontPreview);
  console.log('入力フィールド:', previewInput);
  console.log('フォントサイズスライダー:', fontSizeSlider);

  // プレビューテキスト更新機能
  if (previewInput && fontPreview) {
    previewInput.addEventListener('input', function() {
      const text = this.value || 'こんにちは';
      fontPreview.textContent = text;
      console.log('テキスト更新:', text);
    });
  }

  // フォントサイズ調整機能
  if (fontSizeSlider && fontSizeDisplay && fontPreview) {
    fontSizeSlider.addEventListener('input', function() {
      const size = this.value + 'px';
      fontSizeDisplay.textContent = size;
      fontPreview.style.fontSize = size;
      console.log('フォントサイズ更新:', size);
    });
  }
});
</script>